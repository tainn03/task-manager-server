version: "3.8"

services:
  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=apppassword
      - MYSQL_DB=task_manager
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=production-super-secret-jwt-key
      - JWT_EXPIRES_IN=24h
      - BCRYPT_SALT_ROUNDS=12
      - AUTH_TOKEN_TTL=86400
      - LOG_LEVEL=info
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=task_manager
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "appuser",
          "-p$$MYSQL_PASSWORD",
        ]
      timeout: 20s
      retries: 15
      interval: 10s
      start_period: 60s
    restart: unless-stopped
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 5
      interval: 5s
      start_period: 10s
    restart: unless-stopped
    networks:
      - app-network

  # Development database for local testing
  mysql-dev:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=task_manager_dev
      - MYSQL_USER=devuser
      - MYSQL_PASSWORD=devpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-ppassword",
        ]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - dev

  # Redis for development
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 5
      interval: 5s
      start_period: 10s
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - dev

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  mysql_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  app-network:
    driver: bridge
